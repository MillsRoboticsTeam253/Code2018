// Cazathia and Justin
// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc253.Code2018.subsystems;

import org.usfirst.frc253.Code2018.RobotMap;
import org.usfirst.frc253.Code2018.commands.*;

import com.ctre.phoenix.motorcontrol.ControlMode;
import com.ctre.phoenix.motorcontrol.FeedbackDevice;
import com.ctre.phoenix.motorcontrol.StatusFrameEnhanced;
import com.ctre.phoenix.motorcontrol.can.TalonSRX;

import edu.wpi.first.wpilibj.SpeedController;


import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class DriveTrain extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
	//getting the objects from robotMap
    private final TalonSRX leftBack = RobotMap.driveTrainLeftBack;
    private final TalonSRX leftFront = RobotMap.driveTrainLeftFront;
    private final TalonSRX rightFront = RobotMap.driveTrainRightFront;
    private final TalonSRX rightBack = RobotMap.driveTrainRightBack;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public DriveTrain(){
    	leftBack.setStatusFramePeriod(StatusFrameEnhanced.Status_2_Feedback0, 1, 10); 
		leftBack.configSelectedFeedbackSensor(FeedbackDevice.QuadEncoder, 0, 10);
		leftBack.setInverted(false);
		
		leftFront.follow(leftBack);
		
		rightFront.setStatusFramePeriod(StatusFrameEnhanced.Status_2_Feedback0, 1, 10); 
		rightFront.configSelectedFeedbackSensor(FeedbackDevice.CTRE_MagEncoder_Relative, 0, 10);
		rightFront.setInverted(false);
		
		rightFront.follow(rightBack);
    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND
    	//default command for this subsystem
        setDefaultCommand(new tankDrive());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }
    //giving the speed controllers values
    public void drive(double leftspeed, double rightspeed){// We are setting the speed controllers to speed
    	leftBack.set(ControlMode.PercentOutput, -leftspeed);//the leftfront and back are multiplied by -1 because the values are reversed 
    	
    	rightBack.set(ControlMode.PercentOutput, rightspeed);
    }
    
    public TalonSRX getRightFront(){
    	return rightFront;
    }
}

